/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/login";
exports.ids = ["pages/api/login"];
exports.modules = {

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("axios");

/***/ }),

/***/ "cheerio":
/*!**************************!*\
  !*** external "cheerio" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("cheerio");

/***/ }),

/***/ "cookies":
/*!**************************!*\
  !*** external "cookies" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("cookies");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Flogin&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Clogin.js&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Flogin&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Clogin.js&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_login_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\login.js */ \"(api)/./src/pages/api/login.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_login_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_login_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/login\",\n        pathname: \"/api/login\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_login_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmxvZ2luJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTVDcGFnZXMlNUNhcGklNUNsb2dpbi5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUN3RDtBQUN4RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsb0RBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLG9EQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYWRlcmJvYXJkLz8wZjFmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXGxvZ2luLmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbG9naW5cIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9sb2dpblwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Flogin&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Clogin.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/mongodb.js":
/*!************************!*\
  !*** ./lib/mongodb.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n// import { MongoClient } from 'mongodb'\n// const uri = process.env.MONGODB_URI\n// const options = {\n//   useUnifiedTopology: true,\n//   useNewUrlParser: true,\n// }\n// let client\n// let clientPromise\n// if (!process.env.MONGODB_URI) {\n//   throw new Error('Add Mongo URI to env file')\n// }\n// client = new MongoClient(uri, options)\n// clientPromise = client.connect()\n// export default clientPromise\n\nconst uri = process.env.MONGODB_URI;\nif (!uri) {\n    throw new Error(\"Please add your Mongo URI to the environment variables\");\n}\nlet client;\nlet clientPromise;\nif (true) {\n    if (!global._mongoClientPromise) {\n        client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri);\n        global._mongoClientPromise = client.connect();\n    }\n    clientPromise = global._mongoClientPromise;\n} else {}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientPromise);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvbW9uZ29kYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSx3Q0FBd0M7QUFFeEMsc0NBQXNDO0FBQ3RDLG9CQUFvQjtBQUNwQiw4QkFBOEI7QUFDOUIsMkJBQTJCO0FBQzNCLElBQUk7QUFFSixhQUFhO0FBQ2Isb0JBQW9CO0FBRXBCLGtDQUFrQztBQUNsQyxpREFBaUQ7QUFDakQsSUFBSTtBQUVKLHlDQUF5QztBQUN6QyxtQ0FBbUM7QUFHbkMsK0JBQStCO0FBR087QUFDdEMsTUFBTUMsTUFBTUMsUUFBUUMsR0FBRyxDQUFDQyxXQUFXO0FBRW5DLElBQUksQ0FBQ0gsS0FBSztJQUNSLE1BQU0sSUFBSUksTUFBTTtBQUNsQjtBQUNBLElBQUlDO0FBQ0osSUFBSUM7QUFDSixJQUFJTCxJQUF5QixFQUFlO0lBQzFDLElBQUksQ0FBQ00sT0FBT0MsbUJBQW1CLEVBQUU7UUFDL0JILFNBQVMsSUFBSU4sZ0RBQVdBLENBQUNDO1FBQ3pCTyxPQUFPQyxtQkFBbUIsR0FBR0gsT0FBT0ksT0FBTztJQUM3QztJQUNBSCxnQkFBZ0JDLE9BQU9DLG1CQUFtQjtBQUM1QyxPQUFPLEVBR047QUFDRCxpRUFBZUYsYUFBYUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlYWRlcmJvYXJkLy4vbGliL21vbmdvZGIuanM/ZDkyMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gJ21vbmdvZGInXHJcblxyXG4vLyBjb25zdCB1cmkgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSSVxyXG4vLyBjb25zdCBvcHRpb25zID0ge1xyXG4vLyAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcclxuLy8gICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXHJcbi8vIH1cclxuXHJcbi8vIGxldCBjbGllbnRcclxuLy8gbGV0IGNsaWVudFByb21pc2VcclxuXHJcbi8vIGlmICghcHJvY2Vzcy5lbnYuTU9OR09EQl9VUkkpIHtcclxuLy8gICB0aHJvdyBuZXcgRXJyb3IoJ0FkZCBNb25nbyBVUkkgdG8gZW52IGZpbGUnKVxyXG4vLyB9XHJcblxyXG4vLyBjbGllbnQgPSBuZXcgTW9uZ29DbGllbnQodXJpLCBvcHRpb25zKVxyXG4vLyBjbGllbnRQcm9taXNlID0gY2xpZW50LmNvbm5lY3QoKVxyXG5cclxuXHJcbi8vIGV4cG9ydCBkZWZhdWx0IGNsaWVudFByb21pc2VcclxuXHJcblxyXG5pbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gJ21vbmdvZGInO1xyXG5jb25zdCB1cmkgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSSTtcclxuXHJcbmlmICghdXJpKSB7XHJcbiAgdGhyb3cgbmV3IEVycm9yKCdQbGVhc2UgYWRkIHlvdXIgTW9uZ28gVVJJIHRvIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMnKTtcclxufVxyXG5sZXQgY2xpZW50O1xyXG5sZXQgY2xpZW50UHJvbWlzZTtcclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XHJcbiAgaWYgKCFnbG9iYWwuX21vbmdvQ2xpZW50UHJvbWlzZSkge1xyXG4gICAgY2xpZW50ID0gbmV3IE1vbmdvQ2xpZW50KHVyaSk7XHJcbiAgICBnbG9iYWwuX21vbmdvQ2xpZW50UHJvbWlzZSA9IGNsaWVudC5jb25uZWN0KCk7XHJcbiAgfVxyXG4gIGNsaWVudFByb21pc2UgPSBnbG9iYWwuX21vbmdvQ2xpZW50UHJvbWlzZTtcclxufSBlbHNlIHtcclxuICBjbGllbnQgPSBuZXcgTW9uZ29DbGllbnQodXJpKTtcclxuICBjbGllbnRQcm9taXNlID0gY2xpZW50LmNvbm5lY3QoKTtcclxufVxyXG5leHBvcnQgZGVmYXVsdCBjbGllbnRQcm9taXNlO1xyXG4iXSwibmFtZXMiOlsiTW9uZ29DbGllbnQiLCJ1cmkiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9VUkkiLCJFcnJvciIsImNsaWVudCIsImNsaWVudFByb21pc2UiLCJnbG9iYWwiLCJfbW9uZ29DbGllbnRQcm9taXNlIiwiY29ubmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/mongodb.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/login.js":
/*!********************************!*\
  !*** ./src/pages/api/login.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookies */ \"cookies\");\n/* harmony import */ var cookies__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cookies__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/mongodb */ \"(api)/./lib/mongodb.js\");\n/* harmony import */ var _scrape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scrape */ \"(api)/./src/pages/api/scrape.js\");\n/* harmony import */ var _scrape__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_scrape__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(node_crypto__WEBPACK_IMPORTED_MODULE_3__);\n// import Cookies from 'cookies';\n// import clientPromise from \"../../../lib/mongodb\";\n// import { updateQuestionsSolved } from './scrape';\n// //import { fetchLeaderboard } from './leaderboard';\n// const { createHash } = require('node:crypto');\n// export default async function handler(req, res) {\n//   if (req.method == \"POST\") {\n//     const username = req.body['username']\n//     const guess = req.body['password']\n//     const client = await clientPromise;\n//     const db = client.db(\"Users\");\n//     const users = await db.collection(\"Profiles\").find({ \"Username\": username }).toArray();\n//     if (users.length == 0) {\n//       res.redirect(\"/login?msg=Incorrect username or password\");\n//       return;\n//     }\n//     const user = users[0]\n//     const guess_hash = createHash('sha256').update(guess).digest('hex');\n//     if (guess_hash == user.Password) {\n//       const cookies = new Cookies(req, res)\n//       cookies.set('username', username)\n//       await updateQuestionsSolved();\n//       //await fetchLeaderboard();\n//       res.redirect(\"/\")\n//     } else {\n//       res.redirect(\"/login?msg=Incorrect username or password\")\n//     }\n//   } else {\n//     res.redirect(\"/\")\n//   }\n// }\n\n\n\n\nasync function handler(req, res) {\n    if (req.method === \"POST\") {\n        const { username, password } = req.body;\n        try {\n            const client = await _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n            const db = client.db(\"Users\");\n            const users = await db.collection(\"Profiles\").find({\n                Username: username\n            }).toArray();\n            if (users.length === 0) {\n                res.redirect(\"/login?msg=Incorrect username or password\");\n                return;\n            }\n            const user = users[0];\n            const guessHash = (0,node_crypto__WEBPACK_IMPORTED_MODULE_3__.createHash)(\"sha256\").update(password).digest(\"hex\");\n            if (guessHash === user.Password) {\n                const cookies = new (cookies__WEBPACK_IMPORTED_MODULE_0___default())(req, res, {\n                    secure: true,\n                    httpOnly: true\n                });\n                cookies.set(\"username\", username);\n                await (0,_scrape__WEBPACK_IMPORTED_MODULE_2__.updateQuestionsSolved)();\n                res.redirect(\"/\");\n            } else {\n                res.redirect(\"/login?msg=Incorrect username or password\");\n            }\n        } catch (error) {\n            console.error(\"Error handling login request:\", error);\n            res.redirect(\"/login?msg=Internal server error\");\n        }\n    } else {\n        res.redirect(\"/\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL2xvZ2luLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsaUNBQWlDO0FBQ2pDLG9EQUFvRDtBQUNwRCxvREFBb0Q7QUFDcEQsc0RBQXNEO0FBRXRELGlEQUFpRDtBQUVqRCxvREFBb0Q7QUFDcEQsZ0NBQWdDO0FBQ2hDLDRDQUE0QztBQUM1Qyx5Q0FBeUM7QUFDekMsMENBQTBDO0FBQzFDLHFDQUFxQztBQUNyQyw4RkFBOEY7QUFDOUYsK0JBQStCO0FBQy9CLG1FQUFtRTtBQUNuRSxnQkFBZ0I7QUFDaEIsUUFBUTtBQUNSLDRCQUE0QjtBQUM1QiwyRUFBMkU7QUFDM0UseUNBQXlDO0FBQ3pDLDhDQUE4QztBQUM5QywwQ0FBMEM7QUFFMUMsdUNBQXVDO0FBQ3ZDLG9DQUFvQztBQUVwQywwQkFBMEI7QUFDMUIsZUFBZTtBQUNmLGtFQUFrRTtBQUNsRSxRQUFRO0FBQ1IsYUFBYTtBQUNiLHdCQUF3QjtBQUN4QixNQUFNO0FBQ04sSUFBSTtBQUUwQjtBQUNtQjtBQUNBO0FBQ1I7QUFFMUIsZUFBZUksUUFBUUMsR0FBRyxFQUFFQyxHQUFHO0lBQzVDLElBQUlELElBQUlFLE1BQU0sS0FBSyxRQUFRO1FBQ3pCLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxRQUFRLEVBQUUsR0FBR0osSUFBSUssSUFBSTtRQUV2QyxJQUFJO1lBQ0YsTUFBTUMsU0FBUyxNQUFNVixvREFBYUE7WUFDbEMsTUFBTVcsS0FBS0QsT0FBT0MsRUFBRSxDQUFDO1lBQ3JCLE1BQU1DLFFBQVEsTUFBTUQsR0FBR0UsVUFBVSxDQUFDLFlBQVlDLElBQUksQ0FBQztnQkFBRUMsVUFBVVI7WUFBUyxHQUFHUyxPQUFPO1lBRWxGLElBQUlKLE1BQU1LLE1BQU0sS0FBSyxHQUFHO2dCQUN0QlosSUFBSWEsUUFBUSxDQUFDO2dCQUNiO1lBQ0Y7WUFFQSxNQUFNQyxPQUFPUCxLQUFLLENBQUMsRUFBRTtZQUNyQixNQUFNUSxZQUFZbEIsdURBQVVBLENBQUMsVUFBVW1CLE1BQU0sQ0FBQ2IsVUFBVWMsTUFBTSxDQUFDO1lBRS9ELElBQUlGLGNBQWNELEtBQUtJLFFBQVEsRUFBRTtnQkFDL0IsTUFBTUMsVUFBVSxJQUFJekIsZ0RBQU9BLENBQUNLLEtBQUtDLEtBQUs7b0JBQUVvQixRQUFRO29CQUFNQyxVQUFVO2dCQUFLO2dCQUNyRUYsUUFBUUcsR0FBRyxDQUFDLFlBQVlwQjtnQkFFeEIsTUFBTU4sOERBQXFCQTtnQkFDM0JJLElBQUlhLFFBQVEsQ0FBQztZQUNmLE9BQU87Z0JBQ0xiLElBQUlhLFFBQVEsQ0FBQztZQUNmO1FBQ0YsRUFBRSxPQUFPVSxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyxpQ0FBaUNBO1lBQy9DdkIsSUFBSWEsUUFBUSxDQUFDO1FBQ2Y7SUFDRixPQUFPO1FBQ0xiLElBQUlhLFFBQVEsQ0FBQztJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFkZXJib2FyZC8uL3NyYy9wYWdlcy9hcGkvbG9naW4uanM/ZWVmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgQ29va2llcyBmcm9tICdjb29raWVzJztcclxuLy8gaW1wb3J0IGNsaWVudFByb21pc2UgZnJvbSBcIi4uLy4uLy4uL2xpYi9tb25nb2RiXCI7XHJcbi8vIGltcG9ydCB7IHVwZGF0ZVF1ZXN0aW9uc1NvbHZlZCB9IGZyb20gJy4vc2NyYXBlJztcclxuLy8gLy9pbXBvcnQgeyBmZXRjaExlYWRlcmJvYXJkIH0gZnJvbSAnLi9sZWFkZXJib2FyZCc7XHJcblxyXG4vLyBjb25zdCB7IGNyZWF0ZUhhc2ggfSA9IHJlcXVpcmUoJ25vZGU6Y3J5cHRvJyk7XHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XHJcbi8vICAgaWYgKHJlcS5tZXRob2QgPT0gXCJQT1NUXCIpIHtcclxuLy8gICAgIGNvbnN0IHVzZXJuYW1lID0gcmVxLmJvZHlbJ3VzZXJuYW1lJ11cclxuLy8gICAgIGNvbnN0IGd1ZXNzID0gcmVxLmJvZHlbJ3Bhc3N3b3JkJ11cclxuLy8gICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IGNsaWVudFByb21pc2U7XHJcbi8vICAgICBjb25zdCBkYiA9IGNsaWVudC5kYihcIlVzZXJzXCIpO1xyXG4vLyAgICAgY29uc3QgdXNlcnMgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiUHJvZmlsZXNcIikuZmluZCh7IFwiVXNlcm5hbWVcIjogdXNlcm5hbWUgfSkudG9BcnJheSgpO1xyXG4vLyAgICAgaWYgKHVzZXJzLmxlbmd0aCA9PSAwKSB7XHJcbi8vICAgICAgIHJlcy5yZWRpcmVjdChcIi9sb2dpbj9tc2c9SW5jb3JyZWN0IHVzZXJuYW1lIG9yIHBhc3N3b3JkXCIpO1xyXG4vLyAgICAgICByZXR1cm47XHJcbi8vICAgICB9XHJcbi8vICAgICBjb25zdCB1c2VyID0gdXNlcnNbMF1cclxuLy8gICAgIGNvbnN0IGd1ZXNzX2hhc2ggPSBjcmVhdGVIYXNoKCdzaGEyNTYnKS51cGRhdGUoZ3Vlc3MpLmRpZ2VzdCgnaGV4Jyk7XHJcbi8vICAgICBpZiAoZ3Vlc3NfaGFzaCA9PSB1c2VyLlBhc3N3b3JkKSB7XHJcbi8vICAgICAgIGNvbnN0IGNvb2tpZXMgPSBuZXcgQ29va2llcyhyZXEsIHJlcylcclxuLy8gICAgICAgY29va2llcy5zZXQoJ3VzZXJuYW1lJywgdXNlcm5hbWUpXHJcblxyXG4vLyAgICAgICBhd2FpdCB1cGRhdGVRdWVzdGlvbnNTb2x2ZWQoKTtcclxuLy8gICAgICAgLy9hd2FpdCBmZXRjaExlYWRlcmJvYXJkKCk7XHJcblxyXG4vLyAgICAgICByZXMucmVkaXJlY3QoXCIvXCIpXHJcbi8vICAgICB9IGVsc2Uge1xyXG4vLyAgICAgICByZXMucmVkaXJlY3QoXCIvbG9naW4/bXNnPUluY29ycmVjdCB1c2VybmFtZSBvciBwYXNzd29yZFwiKVxyXG4vLyAgICAgfVxyXG4vLyAgIH0gZWxzZSB7XHJcbi8vICAgICByZXMucmVkaXJlY3QoXCIvXCIpXHJcbi8vICAgfVxyXG4vLyB9XHJcblxyXG5pbXBvcnQgQ29va2llcyBmcm9tICdjb29raWVzJztcclxuaW1wb3J0IGNsaWVudFByb21pc2UgZnJvbSAnLi4vLi4vLi4vbGliL21vbmdvZGInO1xyXG5pbXBvcnQgeyB1cGRhdGVRdWVzdGlvbnNTb2x2ZWQgfSBmcm9tICcuL3NjcmFwZSc7XHJcbmltcG9ydCB7IGNyZWF0ZUhhc2ggfSBmcm9tICdub2RlOmNyeXB0byc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XHJcbiAgaWYgKHJlcS5tZXRob2QgPT09ICdQT1NUJykge1xyXG4gICAgY29uc3QgeyB1c2VybmFtZSwgcGFzc3dvcmQgfSA9IHJlcS5ib2R5O1xyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IGNsaWVudFByb21pc2U7XHJcbiAgICAgIGNvbnN0IGRiID0gY2xpZW50LmRiKCdVc2VycycpO1xyXG4gICAgICBjb25zdCB1c2VycyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ1Byb2ZpbGVzJykuZmluZCh7IFVzZXJuYW1lOiB1c2VybmFtZSB9KS50b0FycmF5KCk7XHJcblxyXG4gICAgICBpZiAodXNlcnMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgcmVzLnJlZGlyZWN0KCcvbG9naW4/bXNnPUluY29ycmVjdCB1c2VybmFtZSBvciBwYXNzd29yZCcpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgdXNlciA9IHVzZXJzWzBdO1xyXG4gICAgICBjb25zdCBndWVzc0hhc2ggPSBjcmVhdGVIYXNoKCdzaGEyNTYnKS51cGRhdGUocGFzc3dvcmQpLmRpZ2VzdCgnaGV4Jyk7XHJcblxyXG4gICAgICBpZiAoZ3Vlc3NIYXNoID09PSB1c2VyLlBhc3N3b3JkKSB7XHJcbiAgICAgICAgY29uc3QgY29va2llcyA9IG5ldyBDb29raWVzKHJlcSwgcmVzLCB7IHNlY3VyZTogdHJ1ZSwgaHR0cE9ubHk6IHRydWUgfSk7XHJcbiAgICAgICAgY29va2llcy5zZXQoJ3VzZXJuYW1lJywgdXNlcm5hbWUpO1xyXG5cclxuICAgICAgICBhd2FpdCB1cGRhdGVRdWVzdGlvbnNTb2x2ZWQoKTtcclxuICAgICAgICByZXMucmVkaXJlY3QoJy8nKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXMucmVkaXJlY3QoJy9sb2dpbj9tc2c9SW5jb3JyZWN0IHVzZXJuYW1lIG9yIHBhc3N3b3JkJyk7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGhhbmRsaW5nIGxvZ2luIHJlcXVlc3Q6JywgZXJyb3IpO1xyXG4gICAgICByZXMucmVkaXJlY3QoJy9sb2dpbj9tc2c9SW50ZXJuYWwgc2VydmVyIGVycm9yJyk7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHtcclxuICAgIHJlcy5yZWRpcmVjdCgnLycpO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiQ29va2llcyIsImNsaWVudFByb21pc2UiLCJ1cGRhdGVRdWVzdGlvbnNTb2x2ZWQiLCJjcmVhdGVIYXNoIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJib2R5IiwiY2xpZW50IiwiZGIiLCJ1c2VycyIsImNvbGxlY3Rpb24iLCJmaW5kIiwiVXNlcm5hbWUiLCJ0b0FycmF5IiwibGVuZ3RoIiwicmVkaXJlY3QiLCJ1c2VyIiwiZ3Vlc3NIYXNoIiwidXBkYXRlIiwiZGlnZXN0IiwiUGFzc3dvcmQiLCJjb29raWVzIiwic2VjdXJlIiwiaHR0cE9ubHkiLCJzZXQiLCJlcnJvciIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/login.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/scrape.js":
/*!*********************************!*\
  !*** ./src/pages/api/scrape.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("// //import { uri } from '../../../lib/mongodb';\n// const { MongoClient } = require('mongodb');\n// const axios = require('axios');\n// const cheerio = require('cheerio');\n// const url = process.env.MONGODB_URI;\n// const dbName = 'Users';\n// const usersCollectionName = 'Profiles';\n// async function scrapeQuestionsSolved(url, selector) {\n//     try {\n//         const res = await axios.get(url);\n//         const $ = cheerio.load(res.data);\n//         const d = $(selector).last().text().trim();\n//         return parseInt(d.match(/\\d+/)[0]);\n//     } catch (error) {\n//         console.error(`Error fetching data from ${url}:`, error.message);\n//         return null;\n//     }\n// }\n// async function gfgScrapeQuestionsSolved(url, selector) {\n//     let myList = [];\n//     try {\n//         const res = await axios.get(url);\n//         const $ = cheerio.load(res.data);\n//         const d = $(selector).text();\n//         let matches = d.match(/\\d+/g);\n//         if (matches) {\n//             matches.forEach((num) => {\n//                 myList.push(parseInt(num, 10));\n//             })\n//         }\n//         return myList;\n//     } catch (error) {\n//         console.error(`Error fetching data from ${url}:`, error.message);\n//         return null;\n//     }\n// }\n// async function fetchLeetCodeSolved(username) {\n//     let myList = [];\n//     try {\n//         const url = `https://leetcode-stats-api.herokuapp.com/${username}`;\n//         const res = await axios.get(url);\n//         let easy = parseInt(res.data.easySolved);\n//         let medium = parseInt(res.data.mediumSolved);\n//         let hard = parseInt(res.data.hardSolved);\n//         myList.push(easy, medium, hard);\n//         return myList;\n//     } catch (error) {\n//         console.error(`Error fetching data from LeetCode for user ${username}:`, error.message);\n//         return null;\n//     }\n// }\n// export async function updateQuestionsSolved() {\n//     //const client = new MongoClient(url, { useNewUrlParser: true, useUnifiedTopology: true });\n//     const client = new MongoClient(url);\n//     try {\n//         await client.connect();\n//         const db = client.db(dbName);\n//         const usersCollection = db.collection(usersCollectionName);\n//         const users = await usersCollection.find().toArray();\n//         let i = 0;\n//         for (const user of users) {\n//             try {\n//                 const codechefUrl = `https://www.codechef.com/users/${user.CC_username}`;\n//                 const leetcodeUsername = user.Lt_username;\n//                 const gfgUsernameUrl = `https://www.geeksforgeeks.org/user/${user.GFG_username}`;\n//                 const codechefSolved = await scrapeQuestionsSolved(codechefUrl, '.rating-data-section.problems-solved h3');\n//                 const leetcodeSolved = await fetchLeetCodeSolved(leetcodeUsername);\n//                 const gfgSolved = await gfgScrapeQuestionsSolved(gfgUsernameUrl, '.problemNavbar_head__cKSRi');\n//                 const lc_norm = 2 * leetcodeSolved[0] + 3 * leetcodeSolved[1] + 4 * leetcodeSolved[2];\n//                 let gfg_norm = 0.5 * gfgSolved[0] + 1 * gfgSolved[1] + 2 * gfgSolved[2] + 3 * gfgSolved[3] + 4 * gfgSolved[4];\n//                 if (isNaN(gfg_norm)) {\n//                     gfg_norm = 0;\n//                 }\n//                 const cc_norm = 2.5 * codechefSolved;\n//                 let total_norm = 0;\n//                 if (user.Lt_username && user.GFG_username && user.CC_username) {\n//                     total_norm = cc_norm / 3 + lc_norm / 3 + gfg_norm / 3;\n//                 }\n//                 else if (user.Lt_username && user.GFG_username || user.GFG_username && user.CC_username || user.CC_username && user.Lt_username) {\n//                     total_norm = cc_norm / 2 + lc_norm / 2 + gfg_norm / 2;\n//                 }\n//                 else if (user.Lt_username || user.GFG_username || user.CC_username) {\n//                     total_norm = cc_norm / 1 + lc_norm / 1 + gfg_norm / 1;\n//                 }\n//                 else {\n//                     total_norm = 0;\n//                 }\n//                 //const totalSolved = codechefSolved + leetcodeSolved + gfgSolved;\n//                 await usersCollection.updateOne({ _id: user._id }, {\n//                     $set: {\n//                         cc: codechefSolved,\n//                         ccs: cc_norm,\n//                         lc: leetcodeSolved,\n//                         lcs: lc_norm,\n//                         gfg: gfgSolved,\n//                         gfgs: gfg_norm,\n//                         t_norm: total_norm\n//                     }\n//                 });\n//                 console.log(i);\n//                 i++;\n//             } catch (error) {\n//                 console.error(`Error processing user ${user._id}:`, error.message);\n//             }\n//         }\n//     } finally {\n//         await client.close();\n//     }\n// }\n// updateQuestionsSolved().catch(console.error);\nconst { MongoClient } = __webpack_require__(/*! mongodb */ \"mongodb\");\nconst axios = __webpack_require__(/*! axios */ \"axios\");\nconst cheerio = __webpack_require__(/*! cheerio */ \"cheerio\");\nconst url = process.env.MONGODB_URI;\nconst dbName = \"Users\";\nconst usersCollectionName = \"Profiles\";\n// Helper function to delay execution\nconst delay = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\nasync function scrapeQuestionsSolved(url, selector) {\n    try {\n        const res = await axios.get(url);\n        const $ = cheerio.load(res.data);\n        const d = $(selector).last().text().trim();\n        return parseInt(d.match(/\\d+/)[0]);\n    } catch (error) {\n        console.error(`Error fetching data from ${url}:`, error.message);\n        return null;\n    }\n}\nasync function gfgScrapeQuestionsSolved(url, selector) {\n    let myList = [];\n    try {\n        const res = await axios.get(url);\n        const $ = cheerio.load(res.data);\n        const d = $(selector).text();\n        let matches = d.match(/\\d+/g);\n        if (matches) {\n            matches.forEach((num)=>{\n                myList.push(parseInt(num, 10));\n            });\n        }\n        return myList;\n    } catch (error) {\n        console.error(`Error fetching data from ${url}:`, error.message);\n        return null;\n    }\n}\nasync function fetchLeetCodeSolved(username) {\n    let myList = [];\n    try {\n        const url = `https://leetcode-stats-api.herokuapp.com/${username}`;\n        const res = await axios.get(url);\n        let easy = parseInt(res.data.easySolved);\n        let medium = parseInt(res.data.mediumSolved);\n        let hard = parseInt(res.data.hardSolved);\n        myList.push(easy, medium, hard);\n        return myList;\n    } catch (error) {\n        console.error(`Error fetching data from LeetCode for user ${username}:`, error.message);\n        return null;\n    }\n}\nasync function updateQuestionsSolved() {\n    const client = new MongoClient(url);\n    const maxRetries = 3;\n    const retryDelay = 5000; // 5 seconds\n    try {\n        await client.connect();\n        const db = client.db(dbName);\n        const usersCollection = db.collection(usersCollectionName);\n        const users = await usersCollection.find().toArray();\n        let i = 0;\n        for (const user of users){\n            try {\n                const codechefUrl = `https://www.codechef.com/users/${user.CC_username}`;\n                const leetcodeUsername = user.Lt_username;\n                const gfgUsernameUrl = `https://www.geeksforgeeks.org/user/${user.GFG_username}`;\n                let codechefSolved, leetcodeSolved, gfgSolved;\n                for(let attempt = 0; attempt < maxRetries; attempt++){\n                    try {\n                        codechefSolved = await scrapeQuestionsSolved(codechefUrl, \".rating-data-section.problems-solved h3\");\n                        break; // Exit loop if successful\n                    } catch (error) {\n                        if (attempt === maxRetries - 1) throw error;\n                        console.error(`Retrying CodeChef scrape for user ${user._id} (attempt ${attempt + 1})`);\n                        await delay(retryDelay);\n                    }\n                }\n                for(let attempt = 0; attempt < maxRetries; attempt++){\n                    try {\n                        leetcodeSolved = await fetchLeetCodeSolved(leetcodeUsername);\n                        break; // Exit loop if successful\n                    } catch (error) {\n                        if (attempt === maxRetries - 1) throw error;\n                        console.error(`Retrying LeetCode fetch for user ${user._id} (attempt ${attempt + 1})`);\n                        await delay(retryDelay);\n                    }\n                }\n                for(let attempt = 0; attempt < maxRetries; attempt++){\n                    try {\n                        gfgSolved = await gfgScrapeQuestionsSolved(gfgUsernameUrl, \".problemNavbar_head__cKSRi\");\n                        break; // Exit loop if successful\n                    } catch (error) {\n                        if (attempt === maxRetries - 1) throw error;\n                        console.error(`Retrying GFG scrape for user ${user._id} (attempt ${attempt + 1})`);\n                        await delay(retryDelay);\n                    }\n                }\n                const lc_norm = 2 * leetcodeSolved[0] + 3 * leetcodeSolved[1] + 4 * leetcodeSolved[2];\n                let gfg_norm = 0.5 * gfgSolved[0] + 1 * gfgSolved[1] + 2 * gfgSolved[2] + 3 * gfgSolved[3] + 4 * gfgSolved[4];\n                if (isNaN(gfg_norm)) {\n                    gfg_norm = 0;\n                }\n                const cc_norm = 2.5 * codechefSolved;\n                let total_norm = 0;\n                if (user.Lt_username && user.GFG_username && user.CC_username) {\n                    total_norm = cc_norm / 3 + lc_norm / 3 + gfg_norm / 3;\n                } else if (user.Lt_username && user.GFG_username || user.GFG_username && user.CC_username || user.CC_username && user.Lt_username) {\n                    total_norm = cc_norm / 2 + lc_norm / 2 + gfg_norm / 2;\n                } else if (user.Lt_username || user.GFG_username || user.CC_username) {\n                    total_norm = cc_norm / 1 + lc_norm / 1 + gfg_norm / 1;\n                } else {\n                    total_norm = 0;\n                }\n                const newValues = {\n                    cc: codechefSolved,\n                    ccs: cc_norm,\n                    lc: leetcodeSolved,\n                    lcs: lc_norm,\n                    gfg: gfgSolved,\n                    gfgs: gfg_norm,\n                    t_norm: total_norm\n                };\n                const currentUser = await usersCollection.findOne({\n                    _id: user._id\n                });\n                if (!currentUser) continue; // Skip if user not found\n                const hasChanges = Object.keys(newValues).some((key)=>JSON.stringify(currentUser[key]) !== JSON.stringify(newValues[key]));\n                if (hasChanges) {\n                    await usersCollection.updateOne({\n                        _id: user._id\n                    }, {\n                        $set: newValues\n                    });\n                    console.log(`Updated user ${user._id}`);\n                } else {\n                    console.log(`No changes for user ${user._id}`);\n                }\n                i++;\n                await delay(1000);\n            } catch (error) {\n                console.error(`Error processing user ${user._id}:`, error.message);\n            }\n        }\n    } finally{\n        await client.close();\n    }\n}\nupdateQuestionsSolved().catch(console.error);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/scrape.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Flogin&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Clogin.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();